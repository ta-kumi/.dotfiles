# 起動時に読み込むプラグイン集

# 見た目系
## molokaiカラースキーム
[[plugins]]
repo = 'tomasr/molokai'
hook_add = '''
	if dein#tap('molokai')
		colorscheme molokai
		autocmd GUIEnter * colorscheme molokai
		" コメントカラー変更
		hi Comment ctermfg=102
		hi Visual  ctermbg=236
	endif
'''
## 末尾の全角と半角の空白文字を可視化
[[plugins]]
repo = 'bronson/vim-trailing-whitespace'
## インデント表示
[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
	:set list lcs=tab:\|\ 
	let g:indentLine_leadingSpaceEnabled = 1
	let g:indentLine_color_term = 237
	let g:indentLine_leadingSpaceChar = '･'
	let g:indentLine_char_list = ['|', '¦', '┆', '┊']
'''
## ステータスライン強化
[[plugins]]
repo = 'vim-airline/vim-airline'
[[plugins]]
repo = 'vim-airline/vim-airline-themes'
hook_add = '''
	set laststatus=2
	set showtabline=2
	let g:airline_theme = 'molokai'
'''

# tag系
## gtags
[[plugins]]
repo = 'vim-scripts/gtags.vim'
hook_add = '''
	" 検索結果windowを閉じる
	nmap <C-q> <C-w><C-w><C-w>q
	" ソースコードのgrep
	nmap <C-g> :Gtags -g
	" 開いているファイルの定義元一覧
	nmap <C-l> :Gtags -f %<CR>
	" カーソル以下の定義元一覧
	nmap <C-j> :Gtags <C-r><C-w><CR>
	" カーソル以下の使用箇所一覧
	nmap <C-k> :Gtags -r <C-r><C-w><CR>
	" 次の検索結果へジャンプ
	nmap <C-n> :cn<CR>
	" 前の検索結果へジャンプ
	nmap <C-p> :cp<CR>
'''
## auto-gtags
[[plugins]]
repo = 'zebult/auto-gtags.vim'
hook_add = 'let g:auto_gtags = 1'

# コーディング支援系
## コード補完
[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
	if !has('nvim')
		call dein#add('roxma/nvim-yarp')
		call dein#add('roxma/vim-hug-neovim-rpc')
	endif
	let g:deoplete#enable_at_startup = 1
	inoremap <expr><Tab> pumvisible() ? "\<DOWN>" : "\<Tab>"
	inoremap <expr><S-Tab> pumvisible() ? "\<UP>" : "\<S-Tab>"

	" 言語対応プラグイン
	call dein#add('Shougo/neco-syntax') " 言語のキーワード補完
	call dein#add('Shougo/neco-vim') " vimコマンドの補完
	call dein#add('deoplete-plugins/deoplete-zsh') " zsh補完
'''
## gtagsからコード補完
[[plugins]]
repo = 'ozelentok/deoplete-gtags'
## カッコ自動補完
[[plugins]]
repo = 'jiangmiao/auto-pairs'
## f検索の際にハイライトをつける
[[plugins]]
repo = 'rhysd/clever-f.vim'
## syntaxエラーチェック
[[plugins]]
repo = 'scrooloose/syntastic'
## コード整形
[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = 'vmap <Enter> <Plug>(EasyAlign)'
## コメントの切り替え
[[plugins]]
repo = 'scrooloose/nerdcommenter'
hook_add = '''
	" コメントにスペースを開ける
	let g:NERDSpaceDelims=1
	" コメントを左に並べる
	let g:NERDDefaultAlign='left'
'''
## 検索ヒット数表示
[[plugins]]
repo = 'osyo-manga/vim-anzu'
hook_add = '''
	" mapping
	nmap n <Plug>(anzu-n-with-echo)
	nmap N <Plug>(anzu-N-with-echo)
	nmap * <Plug>(anzu-star-with-echo)
	nmap # <Plug>(anzu-sharp-with-echo)
	" clear status
	nmap <Esc><Esc> <Plug>(anzu-clear-search-status)
	" statusline
	set statusline=%{anzu#search_status()}
'''
## 置換時のサポート
[[plugins]]
repo = 'osyo-manga/vim-over'
hook_add = '''
	" 全体置換
	nnoremap <silent> <C-h> :OverCommandLine<CR>%s//g<Left><Left>
	" 選択範囲置換
	vnoremap <silent> <C-h> :OverCommandLine<CR>s//g<Left><Left>
	" カーソル以下の単語置換
	nnoremap <silent> <C-h><C-h> :OverCommandLine<CR>%s/<C-r><C-w>//g<Left><Left>
'''
## osc52を使用したクリップボードコピー
[[plugins]]
repo = 'greymd/oscyank.vim'
hook_add = 'noremap <leader>y :Oscyank<cr>'

# git系
## gitの便利操作がvimで出来る Gblameなど
[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
	nmap [figitive] <Nop>
	map <Leader>g [figitive]
	nmap <silent> [figitive]s :<C-u>Gstatus<CR>
	nmap <silent> [figitive]d :<C-u>Gdiff<CR>
	nmap <silent> [figitive]b :<C-u>Gblame<CR>
	nmap <silent> [figitive]l :<C-u>Glog<CR>
'''
## gitの変更箇所を左側に表示してくれる
[[plugins]]
repo = 'airblade/vim-gitgutter'
